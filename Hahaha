local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Mouse = game.Players.LocalPlayer:GetMouse()
local CamlockState = false
local Prediction = 0.1768521
local HorizontalPrediction = 0.111076110
local VerticalPrediction = 0.11034856
local XPrediction = 20
local YPrediction = 20

local Players = game:GetService("Players")	
local LP = Players.LocalPlayer	
local Mouse = LP:GetMouse()	

local Locked = true

getgenv().Key = "q"


function FindNearestEnemy()
    local ClosestDistance, ClosestPlayer = math.huge, nil
    local CenterPosition =
        Vector2.new(
        game:GetService("GuiService"):GetScreenResolution().X / 2,
        game:GetService("GuiService"):GetScreenResolution().Y / 2
    )

    for _, Player in ipairs(game:GetService("Players"):GetPlayers()) do
        if Player ~= LocalPlayer then
            local Character = Player.Character
            if Character and Character:FindFirstChild("HumanoidRootPart") and Character.Humanoid.Health > 0 then
                local Position, IsVisibleOnViewport =
                    game:GetService("Workspace").CurrentCamera:WorldToViewportPoint(Character.HumanoidRootPart.Position)

                if IsVisibleOnViewport then
                    local Distance = (CenterPosition - Vector2.new(Position.X, Position.Y)).Magnitude
                    if Distance < ClosestDistance then
                        ClosestPlayer = Character.HumanoidRootPart
                        ClosestDistance = Distance
                    end
                end
            end
        end
    end

    return ClosestPlayer
end

local enemy = nil
-- Function to aim the camera at the nearest enemy's HumanoidRootPart
RunService.Heartbeat:Connect(
    function()
        if CamlockState == true then
            if enemy then
                local camera = workspace.CurrentCamera
                camera.CFrame = CFrame.new(camera.CFrame.p, enemy.Position + enemy.Velocity * Prediction)
            end
        end
    end
)


Mouse.KeyDown:Connect(function(k)	
    if k == getgenv().Key then	
            Locked = not Locked	
            if Locked then	
                enemy = FindNearestEnemy()
                CamlockState = true
             else	
                if enemy ~= nil then	
                    enemy = nil	
                    CamlockState = false
                end	
            end	
    end	
 end)
 
game.StarterGui:SetCore("SendNotification", {
    Title = "Jah",
    Text = "Jah on top"
})

local ScreenGui = Instance.new("ScreenGui")
local ToggleButton = Instance.new("TextButton")

ScreenGui.Name = "ToggleGui"
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

ToggleButton.Name = "ToggleButton"
ToggleButton.Parent = ScreenGui
ToggleButton.Size = UDim2.new(0, 200, 0, 50)
ToggleButton.Position = UDim2.new(0, 100, 0, 100)
ToggleButton.BackgroundColor3 = Color3.fromRGB(153, 50, 204)
ToggleButton.BackgroundTransparency = 0.2
ToggleButton.TextColor2 = Color2.new(20, 112, 224)
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.TextSize = 24
ToggleButton.Text = "Off"

local uiCorner = Instance.new("UICorner", ToggleButton)
uiCorner.CornerRadius = UDim.new(0, 10)

local dragStart = nil
local startPos = nil

local function onInputBegan(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        dragStart = input.Position
        startPos = ToggleButton.Position
    end
end

local function onInputChanged(input)
    if input.UserInputType == Enum.UserInputType.Touch and dragStart then
        local delta = input.Position - dragStart
        ToggleButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end

local function onInputEnded(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        dragStart = nil
    end
end

ToggleButton.InputBegan:Connect(onInputBegan)
ToggleButton.InputChanged:Connect(onInputChanged)
ToggleButton.InputEnded:Connect(onInputEnded)

local function toggleAimlock()
    enabled = not enabled
    if enabled then
        ToggleButton.Text = "On"
        Plr = getClosestPlayerToCenter()
        if Settings.rewrittenmain.NOTIF then
            game.StarterGui:SetCore("SendNotification", {
                Title = "",
                Text = "Targeting: " .. tostring(Plr.Character.Humanoid.DisplayName),
                Duration = 5
            })
        end
    else
        ToggleButton.Text = "Off"
        if Settings.rewrittenmain.NOTIF then
            game.StarterGui:SetCore("SendNotification", {
                Title = "",
                Text = "Unlocked",
                Duration = 5
            })
        end
    end
end

ToggleButton.MouseButton1Click:Connect(toggleAimlock)
